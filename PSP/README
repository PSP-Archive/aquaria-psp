About the Aquaria PSP port
==========================

This is an unofficial, work-in-progress port of Aquaria to the Sony PSP.
At present, the game is playable, but the frame rate drops precipitously
in some areas.


Important notice (limitations of this version)
----------------------------------------------
Due to Aquaria's memory requirements, the game will only run on a PSP-2000
("Slim") or later.  Aquaria will _not_ run on a PSP-1000 ("Phat").  Sorry!

Save early and often!  Memory fragmentation issues which are normally
unnoticeable on a PC can cause the PSP to crash after playing for a
while.  It may help to periodically exit the game (to the PSP's menu)
after saving, then restart and reload your game.

If you have played an earlier build of the PSP port than build 369, you
will not be able to use the "L + analog pad" combination to look around
the nearby area or "R + analog pad" to aim energy shots unless you first
delete the Aquaria settings file using the XMB save data utility.

Other issues:

- The Key Config menu and Help screen crash the game, so they have been
  disabled for the PSP.  (The most likely cause seems to be that the
  rendering method used by the FTGL library is too inefficient for use
  on the PSP; it might be necessary to use prerendered screens.)


Using the Aquaria PSP Builder
-----------------------------
You can use the "Aquaria PSP Builder" program to build the game using a
precompiled copy of the PSP program, though you will of course need the
data files from the commercial distribution of the game.  The builder is
self-contained, so that you don't need to install any compilers or other
tools -- simply run the program and follow the prompts.

    IMPORTANT:  Never mix game files ("EBOOT.PBP" and "aquaria.dat")
    from different builds!  The PSP port is still in development,
    and there may be subtle changes to the data format between one
    build and another that can cause the game to malfunction if the
    files do not match.  Always copy the entire contents of the
    output game folder to your PSP when the build completes.

The first time you use the builder, it will convert the Aquaria data
files to a format suitable for use by the PSP.  This is a fairly
time-consuming process, and will typically take 10-15 minutes even on
a fast PC.  (While processing certain data files, the program may stop
responding to input for 10-15 seconds or so; if the window appears blank
or you can't click the "Pause" or "Abort" button, wait a moment and try
again.)  These converted files will be saved in the folder you specify
as the "new PSP data folder"; you can delete this folder when the build
finishes, but if you keep it on your system, you can then reuse it when
a newer version of the PSP program is released to save time during the
build.

When the builder finishes its work, the folder you specified as the
"output game folder" will contain all the files needed to play Aquaria
on the PSP.  Copy this folder to your PSP, either using the PSP's USB
mode or a separate Memory Stick reader, under the "PSP/GAME" folder.
For example, if you use Windows and your PSP is connected as drive E:,
you should end up with the following folder structure:

E: --> PSP --> GAME --> AQUARIA

where "AQUARIA" is the name of the output game folder you created (any
name is fine).

Once you have Aquaria installed on your PSP, skip down to the "Default
controls" section for information on playing the game.

Note that the links in the "about this program" screen will not work if
your system web browser is misconfigured, or if (on Linux) you do not
have the "gvfs" package installed.

For developers, the source code for this tool is included under the
PSP/tools subdirectory in the source tree.  In order to build it, you
will need the headers and libraries for the libpng, libogg, libvorbis,
LAME, and GTK+ (2.16 or later) packages installed; on Ubuntu 10.04, for
example, these are the libpng12-dev, libogg-dev, libvorbis-dev,
libmp3lame-dev, and libgtk2.0-dev packages.  You will also need to be
able to build the PSP executable itself, as described below, and you
will need Perl available in your shell's search path.  To compile the
tool, run "make AquariaPSPBuilder" from the PSP/tools subdirectory after
building the PSP executable.


Source code build prerequisites
-------------------------------
The PSP port of Aquaria uses the unofficial PSP SDK from ps2dev.org; the
author builds using Subversion revision 2494 of that SDK.  You will
naturally need a cross-compiler as well; the code assumes GCC, and was
built using GCC 4.4.4.

In order to build Aquaria for PSP, you should also have the following
packages prebuilt and installed for the PSP cross-compiling environment:
    libpng
    zlib
    freetype (optional)
    libogg (optional)
    libvorbis (optional)
    lua (optional)
If you don't have one or more of the optional packages installed, you can
set the appropriate Makefile variable to zero to use the version included
in the Aquaria source code distribution (see "Building the source" below).

Gentoo Linux users can download a Portage overlay from
http://achurch.org/cgi-bin/hg/portage-psp/ which includes ebuilds for all
of the above packages.  To install them:
    emerge psp-binutils psp-gcc pspsdk
    emerge -1 psp-gcc pspsdk  # to install the C++ portions
    emerge psp-zlib psp-libpng psp-libogg psp-libvorbis psp-lua psp-freetype
If you have the "layman" tool installed, add the URL:
    http://achurch.org/portage-psp-layman.xml
to your layman configuration file, then run "layman -f" followed by
"layman -a psp-devel" to add the Portage overlay to your system.


Building the source (read this entire section before starting to build!)
-------------------
The PSP port of Aquaria uses a traditional Makefile rather than the CMake
build system (mostly because CMake is poorly suited to cross-compiling).
To build Aquaria for PSP, simply run "make" in the "PSP" directory;
however, you may need to set certain Make variables depending on your
environment.  The most important of these are described below, but all
user variables are documented in the Makefile itself.

You will probably need GNU Make (http://www.gnu.org/software/make/) to
build correctly; this is installed by default on all modern Linux
distributions, but you may need to install it yourself on other systems.

If you have the PSP SDK and other libraries installed in a location other
than /usr/psp, you can pass the "PSPROOT=/path/to/psp/root" and
"PSPSDK=/path/to/psp/sdk" options on the "make" command line.  For
example, if you have headers and libraries installed in /usr/local/psp
and the SDK in /usr/local/psp/sdk, run: "make PSPROOT=/usr/local/psp" to
build.

For some packages, you can choose between the version of the package
installed on your system (if any) and the version included in the Aquaria
source code distribution.  For example, by passing "USE_INSTALLED_LUA=0"
on the "make" command line, the build will use the version of Lua
included under the "Aquaria" source directory rather than any version you
may have already built for the PSP on your system.  See the top of the
Makefile for a full list of such packages.  (Note that the build process
does _not_ autodetect whether you have the packages installed, and will
attempt to use preinstalled libraries for all packages unless you specify
otherwise.)

The Makefile normally prints a single concise line for each build action,
such as compiling a source file.  To see the actual commands being
executed, pass "V=1" on the "make" command line.

If you get a "multiple definition of 'strtof'" error during the final
link, either:
    1) do a "make clean", then re-run "make" with "CAN_OVERRIDE_STRTOF=0"
       on the command line (this will reduce performance); or
    2) patch the Newlib C library to allow the strtof() function to be
       overridden, rebuild and reinstall newlib, then run "make" to
       repeat the final link of Aquaria.
See the Makefile for details.  For Gentoo Linux users, the "pspsdk"
package in the Portage overlay at http://achurch.org includes an
appropriate Newlib patch.

If you want the game and the system save files (settings and achievements)
to have custom icons, set the ICON0_* variables appropriately in the
Makefile.  The default setting uses the Aquaria title logo from the
commercial distribution, which is not included with this source code.
You will need the Netpbm package installed to generate the icon file.
Alternatively, if you copy your own 144x80 PNG image into the PSP
directory, the build will include that file in the generated EBOOT.PBP.

Running "make clean" will remove the executable, object code, and related
files.  "make spotless" will remove those files as well as the dependency
control files used by the Makefile itself, and should give you a pristine
source tree.


Installing
----------
To install Aquaria, create a directory on your PSP's Memory Stick under
/PSP/GAME, perhaps /PSP/GAME/AQUARIA, and copy into that directory:

    EBOOT.PBP (created by the build)

    _Either:_
        ICON0.PNG (created by the build if you specified an icon file)
        The following directories from the commercial Aquaria distribution:
            data, gfx, mus, scripts, sfx, vox
            _except_ that all *.lua files must be replaced by the *.lua
            files under the "game_scripts" directory of the source tree.
    _Or:_
        aquaria.dat (see "Using a package file" below)

    Optionally, the _mods directory from the commercial distribution,
        along with any user-created mods you want to install (however,
        mods that require a mouse, such as editors, may not work properly)

However, see the "Converting data files" and "Using a package file"
sections below for important notes regarding the data files.


Converting data files
---------------------
While Aquaria for PSP will run(*) with the stock data files distributed
with the commercial version of the game, it will run very slowly.  This
is due to the significant cost of decompressing and shrinking (because
the PSP can't handle textures larger than 512x512 pixels) all of the PNG
textures on load, and the extreme effort required to decode Ogg Vorbis
audio on the PSP (a single stereo stream consumes around 50% CPU time,
even at the highest possible CPU clock speed).

(*) Only in the sense that the program will start and proceed as far as
    the title screen.  Even after shrinking, PNG textures require 4x as
    much memory as the custom texture format described below, and
    current PSP models do not have enough memory to hold all of the
    textures required for gameplay.

To address this problem, there are two tools in the "tools" subdirectory:
"pngtotex" and "oggtomp3".  The former converts PNG textures to half-size,
uncompressed ".tex" data files which the PSP can read in quickly, while
the latter converts Ogg Vorbis audio to MP3, which the PSP can decode on
a separate processor to save time.  It is _very_ strongly recommended
that you use these tools to convert all of the Aquaria data files before
running Aquaria on the PSP.

When loading textures or sound files, the PSP port will automatically
look for ".tex" and ".mp3" files with the same name and in the same
directory as the file being loaded, and will use those files if they
exist.  However (as of the present version), you must keep the original
PNG and Ogg files as well for Aquaria to work correctly.

To build the tools, run "make tools" from the "PSP" directory.  You will
need the zlib, libpng, libogg, libvorbis, and lame packages installed
(on your native system, of course).

There is also a script in the "tools" directory, "convert-all-data.sh",
which you can use to convert all PNG and Ogg files in one go.  Run the
script without any command line parameters for documentation.  (However,
it is advised to use the "AquariaPSPBuilder" program instead; see above
for details.)


Using a package file
--------------------
Aquaria for PSP has the ability to load its data from a "package file",
which is a single file containing all of the data used by Aquaria.
The use of a package file can improve load times dramatically; in one
early test, the time taken on the initial loading screen dropped from
460 seconds (nearly eight minutes!) to just 14 seconds.

The package file format used by the PSP port of Aquaria is called "PKG",
for lack of a better name, and is generated by the "build-pkg" tool in
the "PSP/tools" directory.  There is also a sample script,
"create-package.sh", which demonstrates how a "build-pkg" control file
can be created.  (However, the script does not include the ICON0.PNG
file necessary for adding an icon to the settins and achievements save
files, and does not update the game scripts to those included in the
source tree.  The "AquariaPSPBuilder" tool under PSP/tools takes care of
both issues automatically, and its use is recommended.  See above for
details.)

One caveat to keep in mind is that any directory included in the package
file will _not_ be searched on the Memory Stick when looking for files.
For example, if you include a "_mods" directory in the package file, you
will not later be able to add mods by creating a "_mods" subdirectory in
the Aquaria installation directory on your Memory Stick.


Default controls
----------------
The default controls for the PSP are as follows:

Analog pad      -- move Naija
Directional pad -- select options in menus
L/R triggers    -- change page in menus
L + analog pad  -- look around the nearby area
R + analog pad  -- aim shots in energy form
Cross    -- swim faster; select menu option (left mouse button equivalent)
Circle   -- interact with object; other actions (right mouse button equiv.)
Square   -- revert to normal form; select food for cooking
Triangle -- display world map; remove food from cooking slot
Start    -- open/close in-game menu; pause cutscene
Select   -- cook food; skip cutscene when paused

While in the food menu, the currently selected food item can be discarded
into the environment by holding Select and pressing Triangle while the
cooking slots are empty.

In the world map, use the analog pad to scroll, or hold Circle while
moving the analog pad up or down to zoom.  You can also hold Square to
hide the top bar and area names.


Save files
----------
Aquaria for PSP saves all of its data, both saved games and system data,
using the PSP's native save data system.  The save files will show up on
the PSP's save data menu just like save data from other games.  Saved
game files use a screenshot from the game as the save file image, just
like the in-game load/save menu; system data files (user settings and
achievements) use the same icon as the game itself, if you created one
when you built the program.

One side effect of using the PSP's save data system is that the user
settings file cannot be edited outside of Aquaria, since the PSP
automatically checksums and encrypts all save files.  For normal play
this should not be a problem, but if the Makefile variable
ALLOW_SETTINGS_OVERRIDE is set to 1 when building from the source code,
Aquaria will attempt to load a "usersettings.xml" file on startup, and
will use that file if it exists rather than loading the PSP save file.
However, settings changed in the in-game options menu are saved _only_
to the PSP save file, so those changes will not appear when the game is
restarted unless the "usersettings.xml" file is removed or renamed.


Notes on the source code
------------------------
Much of the PSP port's source code was taken from an engine I developed
for another game.  There is a fair amount of code which is unused by
Aquaria, but which I included because it was simpler than going through
and determining which parts to cut and paste.  Also be aware that much of
the source code documentation is in Japanese, which is the comment
language I used for that engine.


Author/copyright
----------------
Aquaria was ported to the PSP by Andrew Church <achurch@achurch.org>.
Unless noted otherwise in the specific source file, all source code in
the "PSP" directory tree is copyright (C) 2010 Andrew Church, and may be
redistributed under the terms of the GNU General Public License version 2
or later.  See COPYING.txt in the top directory of the Aquaria source
distribution for a copy of version 2 of the GPL.
